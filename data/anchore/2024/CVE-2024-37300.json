{
  "additionalMetadata": {
    "cna": "github_m",
    "cveId": "CVE-2024-37300",
    "description": "OAuthenticator is software that allows OAuth2 identity providers to be plugged in and used with JupyterHub. JupyterHub < 5.0, when used with `GlobusOAuthenticator`, could be configured to allow all users from a particular institution only. This worked fine prior to JupyterHub 5.0, because `allow_all` did not take precedence over `identity_provider`. Since JupyterHub 5.0, `allow_all` does take precedence over `identity_provider`. On a hub with the same config, now all users will be allowed to login, regardless of `identity_provider`. `identity_provider` will basically be ignored. This is a documented change in JupyterHub 5.0, but is likely to catch many users by surprise. OAuthenticator 16.3.1 fixes the issue with JupyterHub 5.0, and does not affect previous versions. As a workaround, do not upgrade to JupyterHub 5.0 when using `GlobusOAuthenticator` in the prior configuration.",
    "reason": "Added CPE configurations because not yet analyzed by NVD.",
    "references": [
      "https://github.com/jupyterhub/oauthenticator/commit/d1aea05fa89f2beae15ab0fa0b0d071030f79654",
      "https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-gprj-3p75-f996",
      "https://jupyterhub.readthedocs.io/en/stable/howto/upgrading-v5.html#authenticator-allow-all-and-allow-existing-users"
    ]
  },
  "adp": {
    "affected": [
      {
        "collectionURL": "https://pypi.org",
        "cpes": [
          "cpe:2.3:a:jupyter:oauthenticator:*:*:*:*:*:*:*:*"
        ],
        "packageName": "oauthenticator",
        "packageType": "python",
        "product": "oauthenticator",
        "repo": "https://github.com/jupyterhub/oauthenticator",
        "vendor": "jupyterhub",
        "versions": [
          {
            "lessThan": "16.3.1",
            "status": "affected",
            "version": "0",
            "versionType": "custom"
          }
        ]
      }
    ],
    "providerMetadata": {
      "orgId": "00000000-0000-4000-8000-000000000000",
      "shortName": "anchoreadp"
    }
  }
}