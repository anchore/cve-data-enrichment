{
  "additionalMetadata": {
    "cna": "github_m",
    "cveId": "CVE-2024-43802",
    "description": "Vim is an improved version of the unix vi text editor. When flushing the typeahead buffer, Vim moves the current position in the typeahead buffer but does not check whether there is enough space left in the buffer to handle the next characters.  So this may lead to the tb_off position within the typebuf variable to point outside of the valid buffer size, which can then later lead to a heap-buffer overflow in e.g. ins_typebuf(). Therefore, when flushing the typeahead buffer, check if there is enough space left before advancing the off position. If not, fall back to flush current typebuf contents. It's not quite clear yet, what can lead to this situation. It seems to happen when error messages occur (which will cause Vim to flush the typeahead buffer) in comnination with several long mappgins and so it may eventually move the off position out of a valid buffer size. Impact is low since it is not easily reproducible and requires to have several mappings active and run into some error condition. But when this happens, this will cause a crash. The issue has been fixed as of Vim patch v9.1.0697. Users are advised to upgrade. There are no known workarounds for this issue.",
    "reason": "Added CPE configurations because not yet analyzed by NVD.",
    "references": [
      "https://github.com/vim/vim/commit/322ba9108612bead5eb",
      "https://github.com/vim/vim/security/advisories/GHSA-4ghr-c62x-cqfh"
    ]
  },
  "adp": {
    "affected": [
      {
        "collectionURL": "https://github.com",
        "cpes": [
          "cpe:2.3:a:vim:vim:*:*:*:*:*:*:*:*"
        ],
        "packageName": "vim/vim",
        "product": "vim",
        "repo": "https://github.com/vim/vim",
        "vendor": "vim",
        "versions": [
          {
            "lessThan": "9.1.0697",
            "status": "affected",
            "version": "0",
            "versionType": "custom"
          }
        ]
      }
    ],
    "providerMetadata": {
      "orgId": "00000000-0000-4000-8000-000000000000",
      "shortName": "anchoreadp"
    }
  }
}